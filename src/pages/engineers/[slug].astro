---
import Layout from '../../layouts/Layout.astro';
import TeamMemberCard from '../../components/TeamMemberCard.astro';

// Interfaces para el usuario y sus propiedades relacionadas
interface CardConfiguration {
  id: string;
  userId: string;
  imageSize: number;
  imageLeftOffset?: string;
  bgColor: string;
  textAbove: string;
  textAboveColor: string;
  aboveFontFamily: string;
  aboveFontSize: string;
  aboveFontWeight: string;
  aboveLetterSpacing: string;
  aboveTextTransform: string;
  aboveTextTopOffset: string;
  textBelow: string;
  belowFontWeight: string;
  belowLetterSpacing: string;
  belowFontFamily: string;
  belowFontSize: string;
  belowTextTransform: string;
  textBelowColor: string;
  createdAt: string;
  updatedAt: string;
}

interface Curriculum {
  id: string;
  userId: string;
  aboutMe: string;
  githubSlug: string;
  linkedinSlug: string;
  createdAt: string;
  updatedAt: string;
}

interface Skill {
  id: string;
  userId: string;
  skillName: string;
  urlCertificate?: string;
  createdAt: string;
  updatedAt: string;
}

interface WorkExperience {
  id: string;
  userId: string;
  role: string;
  companyName: string;
  fromYear: string;
  untilYear: string;
  roleDescription: string;
  createdAt: string;
  updatedAt: string;
}

interface User {
  id: string;
  firstName: string;
  lastName: string;
  email: string;
  isActive: boolean;
  role: string;
  slug: string;
  image: string;
  showCurriculum: boolean;
  createdAt: string;
  updatedAt: string;
  cardConfiguration: CardConfiguration;
  curriculum?: Curriculum;
  skills?: Skill[];
  workExperiences?: WorkExperience[];
}

export function getStaticPaths() {
  return [
    { params: { slug: 'keny-ramirez' } },
    { params: { slug: 'estefany-garcia' } },
    { params: { slug: 'sofia-ferrazano' } },
    { params: { slug: 'ana-martinez' } }
    // Se pueden agregar más slugs aquí si se conocen de antemano
  ];
}

// Obtener el slug de la URL
const { slug } = Astro.params;

// Valores por defecto en caso de error
let engineer: User | null = null;
let error: string | null = null;

// Obtener datos del ingeniero usando nuestro endpoint
try {
  const response = await fetch(new URL(`/api/users/${slug}`, Astro.url));
  
  if (response.ok) {
    engineer = await response.json();
  } else if (response.status === 404) {
    error = "Ingeniero no encontrado";
  } else {
    throw new Error('Error al obtener los detalles del ingeniero');
  }
} catch (err) {
  console.error(`Error al obtener detalles del ingeniero ${slug}:`, err);
  error = "Ocurrió un error al cargar la información del ingeniero";
}

// Función para formatear fechas
function formatDate(dateString: string): string {
  const date = new Date(dateString);
  const options: Intl.DateTimeFormatOptions = { year: 'numeric', month: 'long' };
  return date.toLocaleDateString('es-ES', options);
}
---

<Layout title={engineer ? `${engineer.firstName} ${engineer.lastName} - Kodeksa` : 'Ingeniero - Kodeksa'} description={engineer ? `${engineer.firstName} ${engineer.lastName} es ${engineer.role} en Kodeksa. Conoce su experiencia y proyectos.` : 'Detalles del ingeniero'}>
  <div class="min-h-screen bg-kodeksa-light">
    <header class="fixed w-full z-50 top-0 left-0">
      <nav class="mx-auto px-6 py-6">
        <a href="/" class="font-display text-2xl font-bold text-kodeksa-dark hover:text-kodeksa-primary transition-colors">
          Kodeksa
        </a>
      </nav>
    </header>
    
    <main class="pt-32 pb-20 px-6">
      {error ? (
        <div class="max-w-3xl mx-auto text-center py-16">
          <div class="bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded mb-8">
            {error}
          </div>
          <a href="/" class="inline-flex items-center px-6 py-3 bg-kodeksa-primary text-white rounded-full">
            Volver al inicio
          </a>
        </div>
      ) : engineer && (
        <div class="max-w-6xl mx-auto">
          <div class="grid lg:grid-cols-[1fr,2fr] gap-16">
            <div class="space-y-8">
              <div class="aspect-[3/4] bg-kodeksa-dark/5 rounded-2xl overflow-hidden">
                <TeamMemberCard
                  image={engineer.image}
                  altText={`${engineer.firstName} ${engineer.lastName}`}
                  text_above={engineer.cardConfiguration.textAbove}
                  text_below={engineer.cardConfiguration.textBelow}
                  bgColor={engineer.cardConfiguration.bgColor}
                  textAboveColor={engineer.cardConfiguration.textAboveColor}
                  textBelowColor={engineer.cardConfiguration.textBelowColor}
                  imageSize={engineer.cardConfiguration.imageSize || 90}
                  imageLeftOffset={engineer.cardConfiguration.imageLeftOffset || "0"}
                  aboveFontFamily={engineer.cardConfiguration.aboveFontFamily}
                  belowFontFamily={engineer.cardConfiguration.belowFontFamily}
                  aboveFontSize={engineer.cardConfiguration.aboveFontSize}
                  belowFontSize={engineer.cardConfiguration.belowFontSize}
                  aboveFontWeight={engineer.cardConfiguration.aboveFontWeight}
                  belowFontWeight={engineer.cardConfiguration.belowFontWeight}
                  aboveLetterSpacing={engineer.cardConfiguration.aboveLetterSpacing}
                  belowLetterSpacing={engineer.cardConfiguration.belowLetterSpacing}
                  aboveTextTransform={engineer.cardConfiguration.aboveTextTransform}
                  belowTextTransform={engineer.cardConfiguration.belowTextTransform}
                  aboveTextTopOffset={engineer.cardConfiguration.aboveTextTopOffset}
                />
              </div>
              
              <div class="space-y-4">
                <h1 class="font-display text-4xl font-bold text-kodeksa-dark">{engineer.firstName} {engineer.lastName}</h1>
                <p class="text-xl text-kodeksa-primary font-medium">{engineer.role}</p>
              </div>

              {engineer.curriculum && (
                <div class="space-y-2">
                  <a 
                    href={`https://github.com/${engineer.curriculum.githubSlug}`} 
                    target="_blank" 
                    rel="noopener noreferrer" 
                    class="flex items-center gap-2 text-kodeksa-dark/70 hover:text-kodeksa-primary transition-colors"
                  >
                    <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                      <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
                    </svg>
                    Github
                  </a>
                  <a 
                    href={`https://linkedin.com/in/${engineer.curriculum.linkedinSlug}`} 
                    target="_blank" 
                    rel="noopener noreferrer" 
                    class="flex items-center gap-2 text-kodeksa-dark/70 hover:text-kodeksa-primary transition-colors"
                  >
                    <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                      <path d="M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.762 0 5-2.239 5-5v-14c0-2.761-2.238-5-5-5zm-11 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.783 1.764-1.75 1.764zm13.5 12.268h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-11h3v1.765c1.396-2.586 7-2.777 7 2.476v6.759z"/>
                    </svg>
                    LinkedIn
                  </a>
                </div>
              )}
            </div>

            <div class="space-y-12">
              {engineer.curriculum && (
                <div class="space-y-6">
                  <h2 class="font-display text-2xl font-bold text-kodeksa-dark">Sobre mí</h2>
                  <p class="text-kodeksa-dark/70 text-lg leading-relaxed">
                    {engineer.curriculum.aboutMe}
                  </p>
                </div>
              )}

              {engineer.workExperiences && engineer.workExperiences.length > 0 && (
                <div class="space-y-6">
                  <h2 class="font-display text-2xl font-bold text-kodeksa-dark">Experiencia</h2>
                  <div class="space-y-8">
                    {engineer.workExperiences.map(exp => (
                      <div class="space-y-2">
                        <h3 class="font-bold text-kodeksa-dark">{exp.role} @ {exp.companyName}</h3>
                        <p class="text-kodeksa-dark/70">
                          {formatDate(exp.fromYear)} - {exp.untilYear ? formatDate(exp.untilYear) : 'Presente'}
                        </p>
                        <p class="text-kodeksa-dark/70 whitespace-pre-line">{exp.roleDescription}</p>
                      </div>
                    ))}
                  </div>
                </div>
              )}

              {engineer.skills && engineer.skills.length > 0 && (
                <div class="space-y-6">
                  <h2 class="font-display text-2xl font-bold text-kodeksa-dark">Stack Tecnológico</h2>
                  <div class="flex flex-wrap gap-2">
                    {engineer.skills.map(skill => (
                      <span class="px-3 py-1 bg-kodeksa-dark/5 text-kodeksa-dark rounded-full text-sm">
                        {skill.skillName}
                      </span>
                    ))}
                  </div>
                </div>
              )}

              <div class="space-y-6">
                <h2 class="font-display text-2xl font-bold text-kodeksa-dark">Proyectos Destacados</h2>
                <div class="grid sm:grid-cols-2 gap-6">
                  <a href="#" class="block group">
                    <div class="aspect-video bg-kodeksa-dark/5 rounded-xl overflow-hidden mb-4">
                      <img 
                        src="/images/projects/project-1.jpg" 
                        alt="Proyecto 1"
                        class="w-full h-full object-cover transition-transform group-hover:scale-105"
                      />
                    </div>
                    <h3 class="font-bold text-kodeksa-dark group-hover:text-kodeksa-primary transition-colors">E-commerce Platform</h3>
                    <p class="text-kodeksa-dark/70">Plataforma de comercio electrónico con más de 100k usuarios activos</p>
                  </a>
                  <a href="#" class="block group">
                    <div class="aspect-video bg-kodeksa-dark/5 rounded-xl overflow-hidden mb-4">
                      <img 
                        src="/images/projects/project-2.jpg" 
                        alt="Proyecto 2"
                        class="w-full h-full object-cover transition-transform group-hover:scale-105"
                      />
                    </div>
                    <h3 class="font-bold text-kodeksa-dark group-hover:text-kodeksa-primary transition-colors">Dashboard Analytics</h3>
                    <p class="text-kodeksa-dark/70">Dashboard de análisis en tiempo real para empresas Fortune 500</p>
                  </a>
                </div>
              </div>
            </div>
          </div>
        </div>
      )}
    </main>
  </div>
</Layout>