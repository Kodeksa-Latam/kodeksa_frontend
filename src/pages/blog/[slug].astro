---
import Layout from '../../layouts/Layout.astro';
import Navbar from '../../components/Navbar.astro';
import Footer from '../../components/Footer.astro';

// Interfaces para la respuesta de la API
interface BlogSection {
  id: string;
  blogId: string;
  order: number;
  type: 'paragraph' | 'heading' | 'subheading' | 'image' | 'list';
  content: string | null;
  src: string | null;
  alt: string | null;
  caption: string | null;
  style: string | null;
  items: string[] | null;
  createdAt: string;
  updatedAt: string;
}

interface Author {
  name: string;
  avatar: string;
  role: string;
}

interface BlogPost {
  id: string;
  userId: string;
  title: string;
  slug: string;
  image: string;
  shortDescription: string;
  categories: string[];
  isActive: boolean;
  author: Author;
  createdAt: string;
  updatedAt: string;
  sections: BlogSection[];
}

// Función para formatear fecha
function formatDate(dateString: string): string {
  const date = new Date(dateString);
  const options: Intl.DateTimeFormatOptions = { day: 'numeric', month: 'long', year: 'numeric' };
  return date.toLocaleDateString('es-ES', options);
}

// Función para generar rutas estáticas
export async function getStaticPaths() {
  let blogPosts = [];
  
  try {
    const apiBaseUrl = import.meta.env.PUBLIC_API_URL || 'http://localhost:3000';
    const response = await fetch(`${apiBaseUrl}/api/blogs?page=1&limit=100`);
    
    if (!response.ok) {
      throw new Error('Error al obtener los artículos del blog');
    }
    
    const data = await response.json();
    blogPosts = data.items;
    
  } catch (err) {
    console.error('Error al obtener artículos del blog para las rutas estáticas:', err);
    // Usar datos de respaldo para generar algunas rutas
    blogPosts = [
      { slug: 'tendencias-de-desarrollo-web-para-2025' },
      { slug: 'cmo-implementar-ia-en-empresas-medianas' },
      { slug: 'optimizacion-de-costos-en-infraestructura-cloud' }
    ];
  }
  
  return blogPosts.map((post: { slug: any; }) => ({
    params: { slug: post.slug },
    props: { slug: post.slug }
  }));
}

const { slug } = Astro.params;

// Obtener los detalles del post desde la API
let post: BlogPost | null = null;
let error = null;

try {
  const apiBaseUrl = import.meta.env.PUBLIC_API_URL || 'http://localhost:3000';
  console.log(`Fetching blog post details from: ${apiBaseUrl}/api/blogs/slug/${slug}`);
  
  const response = await fetch(`${apiBaseUrl}/api/blogs/slug/${slug}`);
  
  if (!response.ok) {
    throw new Error(`Error al obtener el artículo con slug: ${slug}`);
  }
  
  post = await response.json();
  
} catch (err) {
  console.error(`Error al obtener el artículo con slug: ${slug}`, err);
  error = 'No se pudo cargar el artículo solicitado.';
}

// Función para renderizar un tipo de sección específico
function renderSection(section: BlogSection) {
  switch(section.type) {
    case 'paragraph':
      return `<p>${section.content}</p>`;
    case 'heading':
      return `<h2 class="text-2xl font-bold my-6">${section.content}</h2>`;
    case 'subheading':
      return `<h3 class="text-xl font-semibold my-4">${section.content}</h3>`;
    case 'image':
      return `
        <figure class="my-8">
          <img 
            src="${section.src}" 
            alt="${section.alt || ''}" 
            class="w-full rounded-lg"
          />
          ${section.caption ? `<figcaption class="text-center text-sm text-kodeksa-dark/60 mt-2">${section.caption}</figcaption>` : ''}
        </figure>
      `;
    case 'list':
      if (!section.items) return '';
      const listType = section.style === 'ordered' ? 'ol' : 'ul';
      const listItems = section.items.map(item => `<li class="mb-2">${item}</li>`).join('');
      const listClass = section.style === 'ordered' ? 'list-decimal' : 'list-disc';
      return `
        <${listType} class="${listClass} ml-6 my-4">
          ${listItems}
        </${listType}>
      `;
    default:
      return '';
  }
}

// Si tenemos el post, ordenamos las secciones por el campo 'order'
let orderedSections: BlogSection[] = [];
if (post && post.sections) {
  orderedSections = [...post.sections].sort((a, b) => a.order - b.order);
}

// Título para la página
const pageTitle = post ? `${post.title} - Kodeksa Blog` : 'Artículo no encontrado - Kodeksa Blog';
const description = post ? post.shortDescription : 'Artículo no encontrado';
---

<Layout title={pageTitle} description={description}>
  <Navbar />
  
  <main class="pt-32 pb-20">
    <div class="container mx-auto px-6">
      {error ? (
        <div class="max-w-3xl mx-auto text-center py-16">
          <h1 class="text-3xl font-bold text-kodeksa-dark mb-4">Artículo no encontrado</h1>
          <p class="text-kodeksa-dark/70 mb-8">{error}</p>
          <a href="/blog/all" class="inline-flex items-center px-6 py-3 bg-kodeksa-primary text-white rounded-full">
            Volver al blog
          </a>
        </div>
      ) : (
        <div class="max-w-3xl mx-auto">
          {post && (
            <>
              <!-- Encabezado del artículo -->
              <div class="mb-8">
                <div class="flex items-center gap-4 text-sm text-kodeksa-dark/60 mb-4">
                  <span>{formatDate(post.createdAt)}</span>
                  {post.categories && post.categories.map(category => (
                    <span class="px-3 py-1 bg-kodeksa-dark/5 rounded-full">{category}</span>
                  ))}
                </div>
                <h1 class="text-4xl md:text-5xl font-display font-bold text-kodeksa-dark mb-8">
                  {post.title}
                </h1>
                <div class="flex items-center gap-4 mb-12">
                  <img 
                    src={post.author?.avatar ?? '/images/team/default-avatar.png'}
                    alt={post.author?.name ?? 'Autor Desconocido'}
                    class="w-12 h-12 rounded-full object-contain"
                  />
                  <div>
                    <div class="font-bold text-kodeksa-dark">
                      {post.author?.name ?? 'Autor Desconocido'}
                    </div>
                    <div class="text-sm text-kodeksa-dark/70">
                      {post.author?.role || 'Autor'}
                    </div>
                  </div>
                </div>
              </div>
              
              <!-- Imagen principal -->
              {post.image && (
                <div class="aspect-video rounded-xl overflow-hidden mb-12">
                  <img 
                    src={post.image} 
                    alt={post.title}
                    class="w-full h-full object-cover"
                  />
                </div>
              )}
              
              <!-- Contenido del artículo -->
              <article class="prose prose-lg max-w-none prose-kodeksa mb-12">
                {orderedSections.map(section => (
                  <Fragment set:html={renderSection(section)} />
                ))}
              </article>
              
              <!-- Enlaces para compartir -->
              <div class="mt-12 pt-8 border-t border-kodeksa-dark/10">
                <h3 class="font-bold text-kodeksa-dark mb-4">Compartir este artículo</h3>
                <div class="flex gap-4">
                  <a 
                    href={`https://twitter.com/intent/tweet?text=${encodeURIComponent(post.title)}&url=${encodeURIComponent(`https://kodeksa.lat/blog/${post.slug}`)}`}
                    target="_blank"
                    rel="noopener noreferrer"
                    class="p-3 rounded-full bg-kodeksa-dark/5 text-kodeksa-dark hover:bg-kodeksa-primary hover:text-white transition-colors"
                    aria-label="Compartir en Twitter"
                  >
                    <svg class="w-5 h-5" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                      <path d="M22 4s-.7 2.1-2 3.4c1.6 10-9.4 17.3-18 11.6 2.2.1 4.4-.6 6-2C3 15.5.5 9.6 3 5c2.2 2.6 5.6 4.1 9 4-.9-4.2 4-6.6 7-3.8 1.1 0 3-1.2 3-1.2z"></path>
                    </svg>
                  </a>
                  <a 
                    href={`https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(`https://kodeksa.lat/blog/${post.slug}`)}`}
                    target="_blank"
                    rel="noopener noreferrer"
                    class="p-3 rounded-full bg-kodeksa-dark/5 text-kodeksa-dark hover:bg-kodeksa-primary hover:text-white transition-colors"
                    aria-label="Compartir en LinkedIn"
                  >
                    <svg class="w-5 h-5" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                      <path d="M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z"></path>
                      <rect x="2" y="9" width="4" height="12"></rect>
                      <circle cx="4" cy="4" r="2"></circle>
                    </svg>
                  </a>
                  <a 
                    href={`mailto:?subject=${encodeURIComponent(post.title)}&body=${encodeURIComponent(`Te recomiendo este artículo de Kodeksa: https://kodeksa.lat/blog/${post.slug}`)}`}
                    class="p-3 rounded-full bg-kodeksa-dark/5 text-kodeksa-dark hover:bg-kodeksa-primary hover:text-white transition-colors"
                    aria-label="Compartir por email"
                  >
                    <svg class="w-5 h-5" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                      <rect x="2" y="4" width="20" height="16" rx="2"></rect>
                      <path d="m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7"></path>
                    </svg>
                  </a>
                </div>
              </div>
              
              <!-- Navegación a otros artículos -->
              <div class="mt-8 grid grid-cols-1 md:grid-cols-2 gap-8">
                <a href="/blog/all" class="flex items-center gap-2 text-kodeksa-dark hover:text-kodeksa-primary transition-colors">
                  <svg class="w-5 h-5" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <path d="m15 18-6-6 6-6"></path>
                  </svg>
                  Volver al blog
                </a>
              </div>
            </>
          )}
        </div>
      )}
    </div>
  </main>
  
  <Footer />
</Layout>

<style>
  /* Estilos para el contenido del artículo */
  .prose-kodeksa h2 {
    color: var(--color-kodeksa-dark);
    font-weight: bold;
    margin-top: 2rem;
    margin-bottom: 1rem;
    font-size: 1.5rem;
  }
  
  .prose-kodeksa h3 {
    color: var(--color-kodeksa-dark);
    font-weight: bold;
    margin-top: 1.5rem;
    margin-bottom: 0.8rem;
    font-size: 1.25rem;
  }
  
  .prose-kodeksa p {
    margin-bottom: 1.2rem;
    line-height: 1.8;
    color: rgba(21, 21, 21, 0.8);
  }
  
  .prose-kodeksa ul, 
  .prose-kodeksa ol {
    margin-left: 1.5rem;
    margin-bottom: 1.5rem;
  }
  
  .prose-kodeksa li {
    margin-bottom: 0.5rem;
    color: rgba(21, 21, 21, 0.8);
  }
  
  .prose-kodeksa ul li {
    list-style-type: disc;
  }
  
  .prose-kodeksa ol li {
    list-style-type: decimal;
  }
  
  .prose-kodeksa img {
    border-radius: 0.5rem;
    margin: 2rem 0;
  }
  
  .prose-kodeksa figure figcaption {
    text-align: center;
    font-size: 0.875rem;
    color: rgba(21, 21, 21, 0.6);
    margin-top: 0.5rem;
  }
</style>