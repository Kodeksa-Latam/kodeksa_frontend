---
import Layout from '../../layouts/Layout.astro';
import Navbar from '../../components/Navbar.astro';
import Footer from '../../components/Footer.astro';

// Obtener el slug de la URL
const { slug } = Astro.params;

// Interface para la vacante detallada
interface VacancyDetail {
    id: string;
    jobTitle: string;
    slug: string;
    mode: string;
    yearsExperience: number;
    shortDescription: string;
    description: string;
    stackRequired: string[];
    isActive: boolean;
    status: string;
    createdAt: string;
    updatedAt: string;
}

// Valores por defecto en caso de error
let vacancy: VacancyDetail | null = null;
let error: string | null = null;

// Obtener datos de la vacante
try {
    const response = await fetch(new URL(`/api/vacancy/${slug}`, Astro.url));
    
    if (response.ok) {
        vacancy = await response.json();
    } else if (response.status === 404) {
        error = "Vacante no encontrada";
    } else {
        throw new Error('Error al obtener los detalles de la vacante');
    }
} catch (err) {
    console.error(`Error al obtener detalles de la vacante ${slug}:`, err);
    error = "Ocurrió un error al cargar la información de la vacante";
}

// Lista de países con sus códigos telefónicos
const countryCodes = [
    { code: '+54', country: 'Argentina' },
    { code: '+591', country: 'Bolivia' },
    { code: '+56', country: 'Chile' },
    { code: '+57', country: 'Colombia' },
    { code: '+506', country: 'Costa Rica' },
    { code: '+53', country: 'Cuba' },
    { code: '+593', country: 'Ecuador' },
    { code: '+503', country: 'El Salvador' },
    { code: '+34', country: 'España' },
    { code: '+502', country: 'Guatemala' },
    { code: '+504', country: 'Honduras' },
    { code: '+52', country: 'México' },
    { code: '+505', country: 'Nicaragua' },
    { code: '+507', country: 'Panamá' },
    { code: '+595', country: 'Paraguay' },
    { code: '+51', country: 'Perú' },
    { code: '+1', country: 'República Dominicana / Estados Unidos / Canadá' },
    { code: '+598', country: 'Uruguay' },
    { code: '+58', country: 'Venezuela' }
];

// Función para formatear la fecha
function formatDate(dateString: string): string {
    const date = new Date(dateString);
    return date.toLocaleDateString('es-ES', {
        year: 'numeric',
        month: 'long',
        day: 'numeric'
    });
}
---

<Layout title={vacancy ? `${vacancy.jobTitle} - Kodeksa` : 'Vacante - Kodeksa'} description={vacancy?.shortDescription || 'Detalles de la vacante'}>
    <Navbar />
    
    <main class="pt-32 pb-20">
        <div class="container mx-auto px-6">
            {error ? (
                <div class="max-w-2xl mx-auto text-center">
                    <div class="bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded mb-8">
                        {error}
                    </div>
                    <a href="/" class="inline-flex items-center px-6 py-3 bg-kodeksa-primary text-white rounded-full transition-colors">
                        Volver al inicio
                    </a>
                </div>
            ) : vacancy && (
                <div class="max-w-3xl mx-auto">
                    <!-- Cabecera de la vacante -->
                    <div class="mb-12">
                        <div class="flex items-center gap-4 text-sm text-kodeksa-dark/60 mb-2">
                            <span>{formatDate(vacancy.createdAt)}</span>
                            <span class="flex items-center gap-2">
                                <svg class="w-4 h-4" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M20 12C20 16.4183 16.4183 20 12 20C7.58172 20 4 16.4183 4 12C4 7.58172 7.58172 4 12 4C16.4183 4 20 7.58172 20 12Z" stroke="currentColor" stroke-width="1.5"/>
                                    <path d="M12 8V12L14 14" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"/>
                                </svg>
                                {vacancy.mode}
                            </span>
                            <span class="flex items-center gap-2">
                                <svg class="w-4 h-4" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M12 8V12L14 14" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"/>
                                    <path d="M3 12C3 16.9706 7.02944 21 12 21C16.9706 21 21 16.9706 21 12C21 7.02944 16.9706 3 12 3" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"/>
                                </svg>
                                {vacancy.yearsExperience}+ años
                            </span>
                        </div>
                        
                        <h1 class="text-4xl font-display font-bold text-kodeksa-dark mb-6">
                            {vacancy.jobTitle}
                        </h1>
                        
                        <p class="text-lg text-kodeksa-dark/70 mb-6">
                            {vacancy.shortDescription}
                        </p>
                        
                        <div class="flex flex-wrap gap-2 mb-8">
                            {vacancy.stackRequired.map(tech => (
                                <span class="px-3 py-1 bg-kodeksa-dark/5 text-kodeksa-dark/70 rounded-full text-sm">
                                    {tech}
                                </span>
                            ))}
                        </div>
                    </div>
                    
                    <!-- Descripción detallada -->
                    <div class="bg-white rounded-2xl p-8 shadow-sm shadow-kodeksa-dark/5 mb-12">
                        <h2 class="text-2xl font-bold text-kodeksa-dark mb-6">Descripción del puesto</h2>
                        <div class="prose prose-lg max-w-none text-kodeksa-dark/70">
                            <p>{vacancy.description}</p>
                        </div>
                    </div>
                    
                    <!-- Formulario de postulación -->
                    <div class="bg-white rounded-2xl p-8 shadow-sm shadow-kodeksa-dark/5">
                        <h2 class="text-2xl font-bold text-kodeksa-dark mb-6">Postular a esta vacante</h2>
                        
                        <form id="application-form" class="space-y-6">
                            <input type="hidden" name="vacancyId" value={vacancy.id} />
                            
                            <!-- Nombre -->
                            <div>
                                <label for="name" class="block text-sm font-medium text-kodeksa-dark mb-2">
                                    Nombre completo*
                                </label>
                                <input
                                    type="text"
                                    id="name"
                                    name="name"
                                    class="w-full px-4 py-3 rounded-xl border-kodeksa-dark/10 bg-white focus:border-kodeksa-primary focus:ring focus:ring-kodeksa-primary/10 transition-colors"
                                    required
                                />
                            </div>
                            
                            <!-- Email -->
                            <div>
                                <label for="email" class="block text-sm font-medium text-kodeksa-dark mb-2">
                                    Email*
                                </label>
                                <input
                                    type="email"
                                    id="email"
                                    name="email"
                                    class="w-full px-4 py-3 rounded-xl border-kodeksa-dark/10 bg-white focus:border-kodeksa-primary focus:ring focus:ring-kodeksa-primary/10 transition-colors"
                                    required
                                    pattern="[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,4}$"
                                />
                                <p class="text-xs text-kodeksa-dark/60 mt-1">Ingresa un email válido</p>
                            </div>
                            
                            <!-- Teléfono con selector de país -->
                            <div>
                                <label for="phone" class="block text-sm font-medium text-kodeksa-dark mb-2">
                                    Teléfono*
                                </label>
                                <div class="flex gap-2">
                                    <select
                                        id="country-code"
                                        name="countryCode"
                                        class="w-32 px-4 py-3 rounded-xl border-kodeksa-dark/10 bg-white focus:border-kodeksa-primary focus:ring focus:ring-kodeksa-primary/10 transition-colors"
                                        required
                                    >
                                        {countryCodes.map(country => (
                                            <option value={country.code}>{country.code} ({country.country})</option>
                                        ))}
                                    </select>
                                    <input
                                        type="tel"
                                        id="phone"
                                        name="phone"
                                        class="flex-1 px-4 py-3 rounded-xl border-kodeksa-dark/10 bg-white focus:border-kodeksa-primary focus:ring focus:ring-kodeksa-primary/10 transition-colors"
                                        required
                                    />
                                </div>
                            </div>
                            
                            <!-- Motivación -->
                            <div>
                                <label for="motivation" class="block text-sm font-medium text-kodeksa-dark mb-2">
                                    ¿Por qué te interesa esta posición?*
                                </label>
                                <textarea
                                    id="motivation"
                                    name="applicationMotivation"
                                    rows="4"
                                    class="w-full px-4 py-3 rounded-xl border-kodeksa-dark/10 bg-white focus:border-kodeksa-primary focus:ring focus:ring-kodeksa-primary/10 transition-colors"
                                    required
                                ></textarea>
                            </div>
                            
                            <!-- CV Upload -->
                            <div>
                                <label for="cv" class="block text-sm font-medium text-kodeksa-dark mb-2">
                                    Currículum (PDF)*
                                </label>
                                <div class="border-2 border-dashed border-kodeksa-dark/10 rounded-xl p-6 text-center bg-kodeksa-dark/[0.02]">
                                    <div id="cv-placeholder" class="py-6">
                                        <svg class="mx-auto h-12 w-12 text-kodeksa-dark/40" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M9 13h6m-3-3v6m5 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                                        </svg>
                                        <p class="mt-1 text-sm text-kodeksa-dark/70">
                                            <label for="cv-file" class="text-kodeksa-primary font-medium cursor-pointer">
                                                Haz clic para seleccionar un archivo
                                            </label>
                                            o arrastra y suelta
                                        </p>
                                        <p class="mt-1 text-xs text-kodeksa-dark/60">PDF (máx. 10MB)</p>
                                    </div>
                                    <div id="cv-preview" class="hidden py-6">
                                        <svg class="mx-auto h-12 w-12 text-green-500" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M5 13l4 4L19 7" />
                                        </svg>
                                        <p id="cv-filename" class="mt-1 text-sm text-kodeksa-dark/70"></p>
                                        <button id="cv-remove" type="button" class="mt-2 text-sm text-red-500">Eliminar</button>
                                    </div>
                                    <input id="cv-file" name="cv" type="file" class="hidden" accept=".pdf" required />
                                </div>
                            </div>
                            
                            <!-- Submit Button -->
                            <div id="form-footer" class="pt-4">
                                <button
                                    type="submit"
                                    class="w-full px-8 py-4 bg-kodeksa-primary text-white rounded-full hover:bg-kodeksa-primary/90 transition-colors text-lg font-medium"
                                >
                                    Enviar postulación
                                </button>
                            </div>
                            
                            <!-- Success message (hidden by default) -->
                            <div id="success-message" class="hidden bg-green-50 border border-green-200 text-green-700 px-4 py-3 rounded">
                                <div class="flex">
                                    <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                                    </svg>
                                    <span>¡Tu postulación ha sido enviada con éxito! Nos pondremos en contacto contigo pronto.</span>
                                </div>
                            </div>
                            
                            <!-- Error message (hidden by default) -->
                            <div id="error-message" class="hidden bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded">
                                <div class="flex">
                                    <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                                    </svg>
                                    <span>Ha ocurrido un error al enviar tu postulación. Por favor, intenta nuevamente.</span>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            )}
        </div>
    </main>
    
    <Footer />
</Layout>

<script>
    // Elementos del formulario
    const form = document.getElementById('application-form') as HTMLFormElement;
    const cvInput = document.getElementById('cv-file') as HTMLInputElement;
    const cvPlaceholder = document.getElementById('cv-placeholder');
    const cvPreview = document.getElementById('cv-preview');
    const cvFilename = document.getElementById('cv-filename');
    const cvRemove = document.getElementById('cv-remove');
    const successMessage = document.getElementById('success-message');
    const errorMessage = document.getElementById('error-message');
    const formFooter = document.getElementById('form-footer');
    
    // Manejar la selección de archivo
    cvInput?.addEventListener('change', (event) => {
        const files = (event.target as HTMLInputElement).files;
        
        if (files && files.length > 0) {
            const file = files[0];
            
            // Validar que sea un PDF
            if (file.type !== 'application/pdf') {
                alert('Por favor, selecciona un archivo PDF');
                cvInput.value = '';
                return;
            }
            
            // Validar tamaño (10MB máximo)
            if (file.size > 10 * 1024 * 1024) {
                alert('El archivo no debe exceder los 10MB');
                cvInput.value = '';
                return;
            }
            
            // Mostrar vista previa
            if (cvPlaceholder && cvPreview && cvFilename) {
                cvPlaceholder.classList.add('hidden');
                cvPreview.classList.remove('hidden');
                cvFilename.textContent = file.name;
            }
        }
    });
    
    // Eliminar archivo seleccionado
    cvRemove?.addEventListener('click', () => {
        if (cvInput && cvPlaceholder && cvPreview) {
            cvInput.value = '';
            cvPlaceholder.classList.remove('hidden');
            cvPreview.classList.add('hidden');
        }
    });
    
    // También permitir drag and drop
    const dropZone = document.querySelector('.border-dashed');
    
    if (dropZone) {
        ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
            dropZone.addEventListener(eventName, (e) => {
                e.preventDefault();
                e.stopPropagation();
            }, false);
        });
        
        ['dragenter', 'dragover'].forEach(eventName => {
            dropZone.addEventListener(eventName, () => {
                dropZone.classList.add('border-kodeksa-primary');
                dropZone.classList.add('bg-kodeksa-primary/5');
            }, false);
        });
        
        ['dragleave', 'drop'].forEach(eventName => {
            dropZone.addEventListener(eventName, () => {
                dropZone.classList.remove('border-kodeksa-primary');
                dropZone.classList.remove('bg-kodeksa-primary/5');
            }, false);
        });
        
        dropZone.addEventListener('drop', (e:any) => {
            const dt = e.dataTransfer;
            if (dt && dt.files && dt.files.length > 0 && cvInput) {
                cvInput.files = dt.files;
                // Disparar evento change manualmente
                const event = new Event('change', { bubbles: true });
                cvInput.dispatchEvent(event);
            }
        }, false);
    }
    
    // Manejar envío del formulario
    form?.addEventListener('submit', async (e) => {
        e.preventDefault();
        
        try {
            // Ocultar mensajes previos
            if (successMessage) successMessage.classList.add('hidden');
            if (errorMessage) errorMessage.classList.add('hidden');
            
            // Validar formulario
            if (!form.checkValidity()) {
                form.reportValidity();
                return;
            }
            
            // Mostrar estado de carga
            if (formFooter) {
                formFooter.innerHTML = `
                    <button
                        type="button"
                        disabled
                        class="w-full px-8 py-4 bg-kodeksa-primary/70 text-white rounded-full text-lg font-medium flex items-center justify-center"
                    >
                        <svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                        </svg>
                        Enviando postulación...
                    </button>
                `;
            }
            
            // Crear FormData
            const formData = new FormData(form);
            
            // Añadir código de país al teléfono
            const countryCode = formData.get('countryCode') || '';
            const phone = formData.get('phone') || '';
            formData.set('phone', `${countryCode} ${phone}`);
            formData.delete('countryCode');
            
            // Enviar datos a nuestro endpoint de aplicaciones
            const response = await fetch('/api/applications', {
                method: 'POST',
                body: formData
            });
            
            // Para simular tiempos de respuesta más realistas
            await new Promise(resolve => setTimeout(resolve, 800));
            
            if (response.ok) {
                // Mostrar mensaje de éxito
                if (successMessage) successMessage.classList.remove('hidden');
                
                // Restablecer formulario
                form.reset();
                if (cvPlaceholder && cvPreview) {
                    cvPlaceholder.classList.remove('hidden');
                    cvPreview.classList.add('hidden');
                }
                
                // Restaurar botón de envío
                if (formFooter) {
                    formFooter.innerHTML = `
                        <button
                            type="submit"
                            class="w-full px-8 py-4 bg-kodeksa-primary text-white rounded-full hover:bg-kodeksa-primary/90 transition-colors text-lg font-medium"
                        >
                            Enviar postulación
                        </button>
                    `;
                }
                
                // Scroll hasta el mensaje de éxito
                successMessage?.scrollIntoView({ behavior: 'smooth', block: 'center' });
            } else {
                throw new Error('Error al enviar la postulación');
            }
        } catch (error) {
            console.error('Error:', error);
            
            // Mostrar mensaje de error
            if (errorMessage) errorMessage.classList.remove('hidden');
            
            // Restaurar botón de envío
            if (formFooter) {
                formFooter.innerHTML = `
                    <button
                        type="submit"
                        class="w-full px-8 py-4 bg-kodeksa-primary text-white rounded-full hover:bg-kodeksa-primary/90 transition-colors text-lg font-medium"
                    >
                        Intentar nuevamente
                    </button>
                `;
            }
            
            // Scroll hasta el mensaje de error
            errorMessage?.scrollIntoView({ behavior: 'smooth', block: 'center' });
        }
    });